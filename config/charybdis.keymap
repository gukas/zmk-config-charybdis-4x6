#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define U_TAPPING_TERM 200

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        LeftClickRight {
            bindings = <&mkp LCLK>;
            key-positions = <19 20>;
        };

        RightClickRight {
            bindings = <&mkp RCLK>;
            key-positions = <20 21>;
        };

        MiddleClickRight {
            bindings = <&mkp MCLK>;
            key-positions = <21 22>;
        };

        ParaLeft {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 16>;
        };

        ParaRight {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 19>;
        };

        BrakLeft {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 15>;
        };

        BrakRight {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 20>;
        };

        BraceLeft {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 14>;
        };

        BraceRight {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <9 21>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        CapsWord {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        u_mt: u_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_mt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            #binding-cells = <2>;
            tapping_term_ms = <U_TAPPING_TERM>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        Shift_Enter: Shift_Enter {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_ENTER";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <40>;
            tapping-term-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC         &kp N1  &kp N2  &kp N3              &kp N4     &kp N5           &kp N6     &kp N7        &kp N8              &kp N9   &kp N0    &kp MINUS
&kp GRAVE       &kp Q   &kp W   &kp E               &kp R      &kp T            &kp Y      &kp U         &kp I               &kp O    &kp P     &kp LEFT_BRACKET
&kp TAB         &kp A   &kp S   &u_mt LEFT_SHIFT D  &kp F      &kp G            &kp H      &kp J         &u_mt LEFT_SHIFT K  &kp L    &kp SEMI  &kp APOS
&kp LEFT_SHIFT  &kp Z   &kp X   &kp C               &kp V      &kp B            &kp N      &kp M         &kp COMMA           &kp DOT  &kp FSLH  &u_lt 5 RIGHT_BRACKET
                                &kp LGUI            &kp SPACE  &mo 1            &kp LCTRL  &kp LEFT_ALT
                                                    &mo 2      &kp BACKSPACE    &kp ENTER
            >;
        };

        NAV {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4        &kp F5         &kp F6        &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&none   &none   &kp HOME      &kp UP        &kp END        &kp INSERT    &kp PAGE_UP      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none            &none
&none   &none   &kp LEFT      &kp DOWN      &kp RIGHT      &kp ENTER     &kp PAGE_DOWN    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_0  &none
&none   &none   &kp LC(LEFT)  &kp CAPSLOCK  &kp LC(RIGHT)  &kp DELETE    &kp PRINTSCREEN  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &none            &none
                              &trans        &trans         &trans        &trans           &trans
                                            &mo 3          &trans        &trans
            >;
        };

        SYMNUM {
            bindings = <
&none  &none          &kp AT_SIGN           &kp HASH   &kp DOLLAR             &none        &none        &none             &kp CARET       &none              &none            &none
&none  &none          &kp LESS_THAN         &kp EQUAL  &kp GREATER_THAN       &kp GRAVE    &none        &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RIGHT_BRACKET  &none            &none
&none  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp MINUS  &kp RIGHT_PARENTHESIS  &kp PLUS     &kp PERCENT  &kp LEFT_BRACE    &kp SEMICOLON   &kp RIGHT_BRACE    &kp EXCLAMATION  &none
&none  &none          &kp ASTERISK          &kp COLON  &kp SLASH              &none        &none        &kp PIPE          &kp TILDE       &kp AMPERSAND      &none            &none
                                            &trans     &trans                 &mo 3        &trans       &trans
                                                       &trans                 &trans       &trans
            >;
        };

        FUN {
            bindings = <
&none  &none  &none  &none   &none   &none     &none         &none              &none         &none            &none         &bt BT_CLR_ALL
&none  &none  &none  &none   &none   &none     &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4  &bt BT_CLR
&none  &none  &none  &none   &none   &none     &out OUT_TOG  &kp C_VOLUME_DOWN  &kp C_MUTE    &kp C_VOLUME_UP  &none         &none
&none  &none  &none  &none   &none   &none     &none         &kp K_PREVIOUS     &kp K_PP      &kp K_NEXT       &none         &none
                     &trans  &trans  &trans    &trans        &trans
                             &trans  &trans    &trans
            >;
        };

        AUTO-MOUSE {
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
                        &mkp LCLK  &trans  &mkp RCLK    &trans  &trans
                                   &trans  &trans       &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
                                &trans  &trans    &trans
            >;
        };
    };
};
